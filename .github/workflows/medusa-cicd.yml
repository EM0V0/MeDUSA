name: MeDUSA CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'meddevice-app-flutter-main/**'
      - 'meddevice-backend-rust/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: medusa-cicd-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

jobs:
  flutter-frontend:
    name: Flutter Frontend Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: meddevice-app-flutter-main
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Analyze Flutter code
        run: flutter analyze

      - name: Run Flutter tests
        run: flutter test

      - name: Check for security vulnerabilities
        run: |
          echo "Checking for security vulnerabilities in pubspec.yaml..."
          flutter pub deps

      - name: Build Flutter Web (Debug)
        run: flutter build web --debug

      - name: Build Flutter Web (Release)
        run: flutter build web --release

  rust-backend:
    name: Rust Backend Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: meddevice-backend-rust
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            meddevice-backend-rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check Rust formatting
        run: cargo fmt -- --check

      - name: Run Rust linting
        run: cargo clippy -- -D warnings

      - name: Run Rust tests
        run: cargo test

      - name: Security audit
        run: |
          cargo install cargo-audit || true
          cargo audit

      - name: Build Rust project
        run: cargo build --release

  project-integration:
    name: Project Integration Tests
    runs-on: ubuntu-latest
    needs: [flutter-frontend, rust-backend]
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify project structure
        run: |
          echo "Verifying MeDUSA project structure..."
          ls -la
          echo "Frontend structure:"
          ls -la meddevice-app-flutter-main/
          echo "Backend structure:"
          ls -la meddevice-backend-rust/

      - name: Check .gitignore effectiveness
        run: |
          echo "Checking .gitignore coverage..."
          # Verify no build artifacts are tracked
          if git ls-files | grep -E "(target/|build/|\.dart_tool/)" > /dev/null; then
            echo "❌ Build artifacts found in git tracking!"
            exit 1
          else
            echo "✅ No build artifacts tracked"
          fi

      - name: Integration summary
        run: |
          echo "🎉 MeDUSA CI/CD Pipeline completed successfully!"
          echo "✅ Flutter frontend analyzed and built"
          echo "✅ Rust backend analyzed and built" 
          echo "✅ Project structure verified"
          echo "✅ Security checks passed"